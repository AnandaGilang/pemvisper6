# -*- coding: utf-8 -*-
"""Untitled33.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tvi_RxRMjGz3vuxxupF1vEsOhkTjRF4z
"""

es_buah = set()

print("MEMBUAT ES BUAH")

buah_1 = input("Masukkan nama buah pertama: ")
buah_2 = input("Masukkan nama buah kedua: ")
buah_3 = input("Masukkan nama buah ketiga: ")

es_buah.add(buah_1)
es_buah.add(buah_2)
es_buah.add(buah_3)

print("Buah-buahan telah ditambahkan ke dalam es buah.")

print("Isi dari Es Buah:")
for buah in es_buah:
    print("-", buah)

print("Jumlah buah dalam es buah:", len(es_buah))

hapus_buah = input("Masukkan nama buah yang ingin dikeluarkan: ")
if hapus_buah in es_buah:
    es_buah.remove(hapus_buah)
    print(f"{hapus_buah} telah dikeluarkan dari es buah.")
else:
    print(f"{hapus_buah} tidak ada dalam es buah.")

print("Isi dari Es Buah:")
for buah in es_buah:
    print("-", buah)

pakaian_musim_panas = set()

print("MEMBUAT KOLEKSI PAKAIAN MUSIM PANAS")

pakaian_1 = input("Masukkan jenis pakaian pertama: ")
pakaian_2 = input("Masukkan jenis pakaian kedua: ")
pakaian_3 = input("Masukkan jenis pakaian ketiga: ")

pakaian_musim_panas.add(pakaian_1)
pakaian_musim_panas.add(pakaian_2)
pakaian_musim_panas.add(pakaian_3)

print("Pakaian telah ditambahkan ke dalam koleksi pakaian musim panas.")

print("Isi dari Koleksi Pakaian Musim Panas:")
for pakaian in pakaian_musim_panas:
    print("-", pakaian)

print("Jumlah pakaian dalam koleksi pakaian musim panas:", len(pakaian_musim_panas))

simpan_pakaian = input("Masukkan jenis pakaian yang ingin disimpan: ")
if simpan_pakaian in pakaian_musim_panas:
    pakaian_musim_panas.remove(simpan_pakaian)
    print(f"{simpan_pakaian} telah disimpan dari koleksi pakaian musim panas.")
else:
    print(f"{simpan_pakaian} tidak ada dalam koleksi pakaian musim panas.")

print("Isi dari Koleksi Pakaian Musim Panas:")
for pakaian in pakaian_musim_panas:
    print("-", pakaian)

def hitung_ppn(nilai):
    if nilai > 10000:
        return nilai * 0.12
    else:
        return 0

def hitung_ppn_b(nilai):
    if nilai > 50000:
        return nilai * 0.12
    else:
        return 0

a = float(input("Masukkan nilai a: "))
b = float(input("Masukkan nilai b: "))

a_lebih_besar = a > b
b_lebih_besar = b > a
sama_dengan = a == b

ppn_a = hitung_ppn(a)
ppn_b = hitung_ppn_b(b)
total_ppn = ppn_a + ppn_b

print("Cek apakah a lebih besar dari b:", a_lebih_besar)
print("Cek apakah b lebih besar dari a:", b_lebih_besar)
print("Cek apakah a sama dengan b:", sama_dengan)
print("PPN a:", ppn_a)
print("PPN b:", ppn_b)
print("Total PPN:", total_ppn)
print("Cek apakah a dan b telah dihapus:", not(a or b))

import numpy as np
import matplotlib.pyplot as plt

rowmax = int(1079)
colmax = int(1919)

radius_max = int(1000)
batas1 = int(0.2*radius_max)
batas2 = int(0.4*radius_max)
batas3 = int(0.6*radius_max)
batas4 = int(0.8*radius_max)

gambar = np.zeros(shape=(rowmax+1, colmax+1, 3), dtype=np.int16)
for i in range(0, rowmax+1):
    for j in range(0, colmax+1):
        if (i**2+j**2) >= 0 and (i**2+j**2) < batas1**2:
            gambar[i, j, 0] = 255
        if (i**2+j**2) >= batas1**2 and (i**2+j**2) < batas2**2:
            gambar[i, j, 1] = 255
        if (i**2+j**2) >= batas2**2 and (i**2+j**2) < batas3**2:
            gambar[i, j, 2] = 255
        if (i**2+j**2) >= batas3**2 and (i**2+j**2) < batas4**2:
            gambar[i, j, 0] = 255
            gambar[i, j, 1] = 255
        if (i**2+j**2) >= batas4**2 and (i**2+j**2) < radius_max**2:
            gambar[i, j, 0] = 255
            gambar[i, j, 2] = 255

plt.figure()
plt.imshow(gambar)
plt.show()

import numpy as np
import matplotlib.pyplot as plt

rowmax = int(1079)
colmax = int(1919)

radius_max = int(1000)
batas1 = int(0.4 * radius_max)
batas2 = int(0.5 * radius_max)
# batas3 = int(1.2 * radius_max)
# batas4 = int(1.6 * radius_max)
# batas5 = int(2 * radius_max)
# batas6 = int(2.4 * radius_max)

gambar = np.zeros(shape=(rowmax + 1, colmax + 1, 3), dtype=np.int16)
for i in range(0, rowmax + 1):
    for j in range(0, colmax + 1):
        if (i ** 2 + j ** 2) >= 0 and (i ** 2 + j ** 2) < batas1 ** 2:
            gambar[i, j] = [255, 255, 0]
        elif (i ** 2 + j ** 2) >= batas1 ** 2 and (i ** 2 + j ** 2) < batas2 ** 2:
            gambar[i, j] = [255, 0, 0]
        elif (i**2+j**2) >= batas2**2 or (i**2+j**2) < radius_max**2:
            gambar[i, j] = [255, 255, 255]


plt.figure()
plt.imshow(gambar)
plt.show()